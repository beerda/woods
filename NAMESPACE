# Generated by roxygen2: do not edit by hand

S3method("[",woods_data)
S3method(as.data.frame,woods_data)
S3method(predict,cutpoint_condition)
S3method(predict,gauss_rulebase)
S3method(predict,hypersphere_transform)
S3method(predict,lm_transform)
S3method(predict,node)
S3method(predict,pc_transform)
S3method(predict,tree)
S3method(predict,woods)
S3method(print,node)
S3method(print,tree)
S3method(print,woods)
S3method(split_indices,cutpoint_condition)
S3method(t,list)
S3method(woods,default)
S3method(woods,formula)
export(chain)
export(cutpoint_condition)
export(cutpoint_finder_factory)
export(entropy)
export(entropy_prob)
export(gauss_rulebase)
export(hypersphere_transform)
export(igr)
export(igr_by_indices)
export(igr_condition)
export(inspect)
export(is.cutpoint_condition)
export(is.gauss_rulebase)
export(is.leafnode)
export(is.node)
export(is.tree)
export(is.woods)
export(is.woods_data)
export(is_constant)
export(lm_transform)
export(mean_result)
export(mode_result)
export(modus)
export(pc_transform)
export(random_condition)
export(resampling_factory)
export(split_data)
export(split_indices)
export(sse)
export(sse_condition)
export(woods)
export(woodsModelInfo)
export(woods_data)
import(assertthat)
importFrom(Rcpp,evalCpp)
importFrom(Rfast,sort_unique)
importFrom(forcats,fct_c)
useDynLib(woods, .registration = TRUE)
